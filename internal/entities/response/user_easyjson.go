// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package response

import (
	dto "depeche/internal/delivery/dto"
	entities "depeche/internal/entities"
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse(in *jlexer.Lexer, out *UserStatusResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse(out *jwriter.Writer, in UserStatusResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserStatusResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserStatusResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserStatusResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserStatusResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse1(in *jlexer.Lexer, out *UserStatusBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse1(out *jwriter.Writer, in UserStatusBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserStatusBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserStatusBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserStatusBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserStatusBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse1(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse2(in *jlexer.Lexer, out *UnsubscribeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.Subscribes)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse2(out *jwriter.Writer, in UnsubscribeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UnsubscribeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UnsubscribeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UnsubscribeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UnsubscribeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse2(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse3(in *jlexer.Lexer, out *SubscribesResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse3(out *jwriter.Writer, in SubscribesResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SubscribesResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubscribesResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SubscribesResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubscribesResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse3(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse4(in *jlexer.Lexer, out *SubscribesBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "subs":
			if in.IsNull() {
				in.Skip()
				out.Subs = nil
			} else {
				in.Delim('[')
				if out.Subs == nil {
					if !in.IsDelim(']') {
						out.Subs = make([]*dto.Profile, 0, 8)
					} else {
						out.Subs = []*dto.Profile{}
					}
				} else {
					out.Subs = (out.Subs)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *dto.Profile
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(dto.Profile)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					out.Subs = append(out.Subs, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse4(out *jwriter.Writer, in SubscribesBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"subs\":"
		out.RawString(prefix[1:])
		if in.Subs == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Subs {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					(*v3).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SubscribesBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubscribesBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SubscribesBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubscribesBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse4(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse5(in *jlexer.Lexer, out *SubscribeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.Subscribes)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse5(out *jwriter.Writer, in SubscribeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SubscribeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubscribeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SubscribeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubscribeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse5(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse6(in *jlexer.Lexer, out *SignUpRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.SignUp)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse6(out *jwriter.Writer, in SignUpRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignUpRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignUpRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignUpRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignUpRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse6(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse7(in *jlexer.Lexer, out *SignInRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.SignIn)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse7(out *jwriter.Writer, in SignInRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignInRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignInRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignInRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignInRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse7(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse8(in *jlexer.Lexer, out *SelfResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse8(out *jwriter.Writer, in SelfResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SelfResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SelfResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SelfResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SelfResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse8(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse9(in *jlexer.Lexer, out *SelfBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "profile":
			if in.IsNull() {
				in.Skip()
				out.Profile = nil
			} else {
				if out.Profile == nil {
					out.Profile = new(entities.User)
				}
				(*out.Profile).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse9(out *jwriter.Writer, in SelfBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"profile\":"
		out.RawString(prefix[1:])
		if in.Profile == nil {
			out.RawString("null")
		} else {
			(*in.Profile).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SelfBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SelfBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SelfBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SelfBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse9(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse10(in *jlexer.Lexer, out *RejectRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.Subscribes)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse10(out *jwriter.Writer, in RejectRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RejectRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RejectRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RejectRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RejectRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse10(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse11(in *jlexer.Lexer, out *RandomUsersResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse11(out *jwriter.Writer, in RandomUsersResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RandomUsersResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RandomUsersResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RandomUsersResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RandomUsersResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse11(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse12(in *jlexer.Lexer, out *RandomUsersBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "profiles":
			if in.IsNull() {
				in.Skip()
				out.Profiles = nil
			} else {
				in.Delim('[')
				if out.Profiles == nil {
					if !in.IsDelim(']') {
						out.Profiles = make([]*dto.Profile, 0, 8)
					} else {
						out.Profiles = []*dto.Profile{}
					}
				} else {
					out.Profiles = (out.Profiles)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *dto.Profile
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(dto.Profile)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.Profiles = append(out.Profiles, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse12(out *jwriter.Writer, in RandomUsersBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"profiles\":"
		out.RawString(prefix[1:])
		if in.Profiles == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Profiles {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RandomUsersBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RandomUsersBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RandomUsersBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RandomUsersBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse12(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse13(in *jlexer.Lexer, out *ProfileResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse13(out *jwriter.Writer, in ProfileResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProfileResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProfileResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProfileResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProfileResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse13(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse14(in *jlexer.Lexer, out *ProfileBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "profile":
			if in.IsNull() {
				in.Skip()
				out.Profile = nil
			} else {
				if out.Profile == nil {
					out.Profile = new(dto.Profile)
				}
				(*out.Profile).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse14(out *jwriter.Writer, in ProfileBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"profile\":"
		out.RawString(prefix[1:])
		if in.Profile == nil {
			out.RawString("null")
		} else {
			(*in.Profile).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProfileBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProfileBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProfileBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProfileBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse14(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse15(in *jlexer.Lexer, out *PendingRequestsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse15(out *jwriter.Writer, in PendingRequestsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PendingRequestsResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PendingRequestsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PendingRequestsResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PendingRequestsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse15(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse16(in *jlexer.Lexer, out *PendingRequestsBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "profiles":
			if in.IsNull() {
				in.Skip()
				out.Profiles = nil
			} else {
				in.Delim('[')
				if out.Profiles == nil {
					if !in.IsDelim(']') {
						out.Profiles = make([]*dto.Profile, 0, 8)
					} else {
						out.Profiles = []*dto.Profile{}
					}
				} else {
					out.Profiles = (out.Profiles)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *dto.Profile
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(dto.Profile)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Profiles = append(out.Profiles, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse16(out *jwriter.Writer, in PendingRequestsBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"profiles\":"
		out.RawString(prefix[1:])
		if in.Profiles == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Profiles {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PendingRequestsBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PendingRequestsBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PendingRequestsBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PendingRequestsBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse16(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse17(in *jlexer.Lexer, out *GetGlobalSearchResultResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse17(out *jwriter.Writer, in GetGlobalSearchResultResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetGlobalSearchResultResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetGlobalSearchResultResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetGlobalSearchResultResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetGlobalSearchResultResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse17(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse18(in *jlexer.Lexer, out *GetGlobalSearchResultBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]*entities.UserInfo, 0, 8)
					} else {
						out.Users = []*entities.UserInfo{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v10 *entities.UserInfo
					if in.IsNull() {
						in.Skip()
						v10 = nil
					} else {
						if v10 == nil {
							v10 = new(entities.UserInfo)
						}
						(*v10).UnmarshalEasyJSON(in)
					}
					out.Users = append(out.Users, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "communitites":
			if in.IsNull() {
				in.Skip()
				out.Communities = nil
			} else {
				in.Delim('[')
				if out.Communities == nil {
					if !in.IsDelim(']') {
						out.Communities = make([]*entities.CommunityInfo, 0, 8)
					} else {
						out.Communities = []*entities.CommunityInfo{}
					}
				} else {
					out.Communities = (out.Communities)[:0]
				}
				for !in.IsDelim(']') {
					var v11 *entities.CommunityInfo
					if in.IsNull() {
						in.Skip()
						v11 = nil
					} else {
						if v11 == nil {
							v11 = new(entities.CommunityInfo)
						}
						(*v11).UnmarshalEasyJSON(in)
					}
					out.Communities = append(out.Communities, v11)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse18(out *jwriter.Writer, in GetGlobalSearchResultBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix[1:])
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v12, v13 := range in.Users {
				if v12 > 0 {
					out.RawByte(',')
				}
				if v13 == nil {
					out.RawString("null")
				} else {
					(*v13).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"communitites\":"
		out.RawString(prefix)
		if in.Communities == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.Communities {
				if v14 > 0 {
					out.RawByte(',')
				}
				if v15 == nil {
					out.RawString("null")
				} else {
					(*v15).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetGlobalSearchResultBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetGlobalSearchResultBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetGlobalSearchResultBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetGlobalSearchResultBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse18(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse19(in *jlexer.Lexer, out *FriendsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse19(out *jwriter.Writer, in FriendsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FriendsResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FriendsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FriendsResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FriendsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse19(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse20(in *jlexer.Lexer, out *FriendsBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "friends":
			if in.IsNull() {
				in.Skip()
				out.Friends = nil
			} else {
				in.Delim('[')
				if out.Friends == nil {
					if !in.IsDelim(']') {
						out.Friends = make([]*dto.Profile, 0, 8)
					} else {
						out.Friends = []*dto.Profile{}
					}
				} else {
					out.Friends = (out.Friends)[:0]
				}
				for !in.IsDelim(']') {
					var v16 *dto.Profile
					if in.IsNull() {
						in.Skip()
						v16 = nil
					} else {
						if v16 == nil {
							v16 = new(dto.Profile)
						}
						(*v16).UnmarshalEasyJSON(in)
					}
					out.Friends = append(out.Friends, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse20(out *jwriter.Writer, in FriendsBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"friends\":"
		out.RawString(prefix[1:])
		if in.Friends == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Friends {
				if v17 > 0 {
					out.RawByte(',')
				}
				if v18 == nil {
					out.RawString("null")
				} else {
					(*v18).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FriendsBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FriendsBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FriendsBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FriendsBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse20(l, v)
}
func easyjson9e1087fdDecodeDepecheInternalEntitiesResponse21(in *jlexer.Lexer, out *EditProfileRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.EditProfile)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeDepecheInternalEntitiesResponse21(out *jwriter.Writer, in EditProfileRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EditProfileRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EditProfileRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeDepecheInternalEntitiesResponse21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EditProfileRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EditProfileRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeDepecheInternalEntitiesResponse21(l, v)
}
