// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package response

import (
	dto "depeche/internal/delivery/dto"
	entities "depeche/internal/entities"
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse(in *jlexer.Lexer, out *LikePostResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse(out *jwriter.Writer, in LikePostResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LikePostResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LikePostResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LikePostResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LikePostResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse1(in *jlexer.Lexer, out *LikePostRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.LikeDTO)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse1(out *jwriter.Writer, in LikePostRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LikePostRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LikePostRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LikePostRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LikePostRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse1(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse2(in *jlexer.Lexer, out *LikePostBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "likes_amount":
			out.LikesAmount = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse2(out *jwriter.Writer, in LikePostBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"likes_amount\":"
		out.RawString(prefix[1:])
		out.Int(int(in.LikesAmount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LikePostBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LikePostBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LikePostBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LikePostBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse2(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse3(in *jlexer.Lexer, out *GetPostsByUserLinkResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse3(out *jwriter.Writer, in GetPostsByUserLinkResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPostsByUserLinkResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPostsByUserLinkResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPostsByUserLinkResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPostsByUserLinkResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse3(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse4(in *jlexer.Lexer, out *GetPostsByUserLinkBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "posts":
			if in.IsNull() {
				in.Skip()
				out.Posts = nil
			} else {
				in.Delim('[')
				if out.Posts == nil {
					if !in.IsDelim(']') {
						out.Posts = make([]*entities.Post, 0, 8)
					} else {
						out.Posts = []*entities.Post{}
					}
				} else {
					out.Posts = (out.Posts)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *entities.Post
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(entities.Post)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					out.Posts = append(out.Posts, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse4(out *jwriter.Writer, in GetPostsByUserLinkBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"posts\":"
		out.RawString(prefix[1:])
		if in.Posts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Posts {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					(*v3).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPostsByUserLinkBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPostsByUserLinkBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPostsByUserLinkBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPostsByUserLinkBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse4(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse5(in *jlexer.Lexer, out *GetPostsByIdResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse5(out *jwriter.Writer, in GetPostsByIdResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPostsByIdResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPostsByIdResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPostsByIdResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPostsByIdResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse5(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse6(in *jlexer.Lexer, out *GetPostsByIdBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "posts":
			if in.IsNull() {
				in.Skip()
				out.Posts = nil
			} else {
				in.Delim('[')
				if out.Posts == nil {
					if !in.IsDelim(']') {
						out.Posts = make([]*entities.Post, 0, 8)
					} else {
						out.Posts = []*entities.Post{}
					}
				} else {
					out.Posts = (out.Posts)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *entities.Post
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(entities.Post)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.Posts = append(out.Posts, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse6(out *jwriter.Writer, in GetPostsByIdBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"posts\":"
		out.RawString(prefix[1:])
		if in.Posts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Posts {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPostsByIdBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPostsByIdBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPostsByIdBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPostsByIdBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse6(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse7(in *jlexer.Lexer, out *GetPostsByCommunityLinkResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse7(out *jwriter.Writer, in GetPostsByCommunityLinkResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPostsByCommunityLinkResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPostsByCommunityLinkResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPostsByCommunityLinkResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPostsByCommunityLinkResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse7(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse8(in *jlexer.Lexer, out *GetPostsByCommunityLinkBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "posts":
			if in.IsNull() {
				in.Skip()
				out.Posts = nil
			} else {
				in.Delim('[')
				if out.Posts == nil {
					if !in.IsDelim(']') {
						out.Posts = make([]*entities.Post, 0, 8)
					} else {
						out.Posts = []*entities.Post{}
					}
				} else {
					out.Posts = (out.Posts)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *entities.Post
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(entities.Post)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Posts = append(out.Posts, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse8(out *jwriter.Writer, in GetPostsByCommunityLinkBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"posts\":"
		out.RawString(prefix[1:])
		if in.Posts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Posts {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPostsByCommunityLinkBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPostsByCommunityLinkBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPostsByCommunityLinkBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPostsByCommunityLinkBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse8(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse9(in *jlexer.Lexer, out *DeletePostRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.PostDelete)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse9(out *jwriter.Writer, in DeletePostRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeletePostRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeletePostRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeletePostRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeletePostRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse9(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse10(in *jlexer.Lexer, out *CreatePostResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			(out.Body).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse10(out *jwriter.Writer, in CreatePostResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		(in.Body).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreatePostResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreatePostResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreatePostResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreatePostResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse10(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse11(in *jlexer.Lexer, out *CreatePostRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.PostCreate)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse11(out *jwriter.Writer, in CreatePostRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreatePostRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreatePostRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreatePostRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreatePostRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse11(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse12(in *jlexer.Lexer, out *CreatePostBody) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "posts":
			if in.IsNull() {
				in.Skip()
				out.Posts = nil
			} else {
				in.Delim('[')
				if out.Posts == nil {
					if !in.IsDelim(']') {
						out.Posts = make([]*entities.Post, 0, 8)
					} else {
						out.Posts = []*entities.Post{}
					}
				} else {
					out.Posts = (out.Posts)[:0]
				}
				for !in.IsDelim(']') {
					var v10 *entities.Post
					if in.IsNull() {
						in.Skip()
						v10 = nil
					} else {
						if v10 == nil {
							v10 = new(entities.Post)
						}
						(*v10).UnmarshalEasyJSON(in)
					}
					out.Posts = append(out.Posts, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse12(out *jwriter.Writer, in CreatePostBody) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"posts\":"
		out.RawString(prefix[1:])
		if in.Posts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Posts {
				if v11 > 0 {
					out.RawByte(',')
				}
				if v12 == nil {
					out.RawString("null")
				} else {
					(*v12).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreatePostBody) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreatePostBody) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreatePostBody) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreatePostBody) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse12(l, v)
}
func easyjson5a72dc82DecodeDepecheInternalEntitiesResponse13(in *jlexer.Lexer, out *CancelPostLikeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			if in.IsNull() {
				in.Skip()
				out.Body = nil
			} else {
				if out.Body == nil {
					out.Body = new(dto.LikeDTO)
				}
				(*out.Body).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson5a72dc82EncodeDepecheInternalEntitiesResponse13(out *jwriter.Writer, in CancelPostLikeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		if in.Body == nil {
			out.RawString("null")
		} else {
			(*in.Body).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CancelPostLikeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CancelPostLikeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson5a72dc82EncodeDepecheInternalEntitiesResponse13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CancelPostLikeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CancelPostLikeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson5a72dc82DecodeDepecheInternalEntitiesResponse13(l, v)
}
