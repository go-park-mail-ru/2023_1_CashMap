name: DepechÑƒ Deploy

on:
  push:
    branches: ["main", "deploy"]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=10m

      - name: Create enviroment file
        run: |
          touch .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env 
          echo REDIS_PASS=${{ secrets.REDIS_PASS }} >> .env
          echo DATABASE_HOST= ${{ secrets.DATABASE_HOST }} >> .env

      - name: Build
        run : go build ./...

      - name: Run tests
        run :  go test -race -coverpkg=./... -coverprofile=c.out.tmp ./...;  cat c.out.tmp | grep -v "pb.go" > c.out; go tool cover -func c.out

      - name: Upload source code
        uses: actions/upload-artifact@v2
        with:
          name: depeche-artifact
          path: .


  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Download source
        uses: actions/download-artifact@v2
        with:
          name: depeche-artifact
          path: .

      - name: Upload sources
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "./*"
          target: "/home/ubuntu/backend/2023_1_CashMap"

      - name: Reload app
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/backend/2023_1_CashMap
            sudo docker-compose build --parallel --no-cache
            sudo docker-compose up -d


